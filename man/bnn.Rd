% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BKNN.R
\name{bnn}
\alias{bnn}
\title{Bayesian Nearest Neighours}
\usage{
bnn(
  x,
  alpha = 10,
  beta = 10,
  p_gamma = 0.05,
  class1 = x[1],
  weights = NULL,
  strata = NULL
)
}
\arguments{
\item{x}{A vector for categoricals, for class types of samples, ordered from the closest by distance to the target for prediction}

\item{alpha, beta}{The prior probablities for Beta distributions}

\item{p_gamma}{Proablity of streak extension, ie, not a breakpoint at the next position of the ordered samples}

\item{weights}{Weights for each sample;
\itemize{
\item If \code{NA}, estimate weights using \code{get_sample_weight} from the input \code{x};
\item If \code{NULL}, estimate weights using \code{get_sample_weight} from the input \code{x};
\item Otherwise, values as a numeric vecotor are expected.
}}

\item{strata}{For stratified weights, provide strata groups for samples. Weights will be calculate per group if provided. Default: NULL, not stratified}
}
\value{
A list containing changepoint position, and the posterior proablity
\itemize{
\item \code{pi}, \code{prob(x_t | k)}, A vector, proablities of the current position being class1 for different run lengths
\item \code{pk}, \code{prob(k | x)}, A vector, proablities of being a specific run length
\item \code{posterior}, posterior proablity of the current posistion is from class1
}
}
\description{
Implementation of Nuti G's Algorithm for Bayesian Nearest Neighbours (see references) in R
}
\references{
Nuti G. An efficient algorithm for bayesian nearest neighbours. Methodology and Computing in Applied Probability. 2019 Dec;21(4):1251-8.
}
